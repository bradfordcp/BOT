talk.google.com:5222
TLS required
SASL PLAIN authentication

//mlygatlfiqjcfzrq

telnet talk.google.com 5222
====
Send:
<?xml version='1.0'?>
<stream:stream
  from='cbradford@rackify.com'
  to='gmail.com'
  version='1.0'
  xml:lang='en'
  xmlns='jabber:client'
  xmlns:stream='http://etherx.jabber.org/streams'>

Response:
<stream:stream from="gmail.com" id="A6303BE90DE3AB3A" version="1.0" xmlns:stream="http://etherx.jabber.org/streams" xmlns="jabber:client">
  <stream:features>
    <starttls xmlns="urn:ietf:params:xml:ns:xmpp-tls">
      <required/>
    </starttls>
    <mechanisms xmlns="urn:ietf:params:xml:ns:xmpp-sasl">
      <mechanism>X-GOOGLE-TOKEN</mechanism>
      <mechanism>X-OAUTH2</mechanism>
    </mechanisms>
  </stream:features>

===

Send: the STARTTLS command and prepare to restart the stream
<starttls xmlns='urn:ietf:params:xml:ns:xmpp-tls'/>

Response:
<proceed xmlns="urn:ietf:params:xml:ns:xmpp-tls"/>

===

Here we starttls on the same socket

===

Send: 
<?xml version="1.0"?>
<stream:stream 
  from="bradfordcp" 
  to="gmail.com" 
  xml:lang="en" 
  version="1.0" 
  xmlns="jabber:client" 
  xmlns:stream="http://etherx.jabber.org/streams">

Response:
<stream:stream 
  from="gmail.com" 
  id="C7D0296DF418D42D" 
  version="1.0" 
  xmlns:stream="http://etherx.jabber.org/streams" 
  xmlns="jabber:client">
  <stream:features>
    <mechanisms xmlns="urn:ietf:params:xml:ns:xmpp-sasl">
      <mechanism>PLAIN</mechanism>
      <mechanism>X-GOOGLE-TOKEN</mechanism>
      <mechanism>X-OAUTH2</mechanism>
    </mechanisms>
  </stream:features>
  
======
Send: The auth stanza with plain and the base64 encoded username and password
<auth xmlns="urn:ietf:params:xml:ns:xmpp-sasl" mechanism="PLAIN"><Base64 encode \0 + username + \0 + password></auth>

Response:
<success xmlns="urn:ietf:params:xml:ns:xmpp-sasl"/>

or

<failure xmlns="urn:ietf:params:xml:ns:xmpp-sasl"><not-authorized/></failure>


======
Send: Start another stream now that we are authenticated and secure
<stream:stream from="bradfordcp" to="gmail.com" xml:lang="en" version="1.0" xmlns="jabber:client" xmlns:stream="http://etherx.jabber.org/streams">

Response: The opening stream from the server along with features now that we are logged in and secure
<stream:stream 
  from="gmail.com" 
  id="C274287356C963ED" 
  version="1.0" 
  xmlns:stream="http://etherx.jabber.org/streams" 
  xmlns="jabber:client">
  <stream:features>
    <bind xmlns="urn:ietf:params:xml:ns:xmpp-bind"/>
    <session xmlns="urn:ietf:params:xml:ns:xmpp-session"/>
  </stream:features>


=======
Send: Bind if supported
<iq type="set" id="bind_1">
  <bind xmlns="urn:ietf:params:xml:ns:xmpp-bind"/>
</iq>

Response: Client/Server resource identifier
<iq id="bind_1" type="result">
  <bind xmlns="urn:ietf:params:xml:ns:xmpp-bind">
    <jid>target_user@example.com/2FC56350</jid>
  </bind>
</iq>

========
Send: Roster Request
<iq 
  type="get" 
  id="roster_1" 
  from="<my jid>">
  <query xmlns="jabber:iq:roster"/>
</iq>

Response: List of everyone available on my roster
<iq to="<my jid>" id="roster_1" type="result">
  <query xmlns="jabber:iq:roster">
    <item jid="someone@example.com" subscription="both" name="Some One">
      <group>A Group</group>
    </item>
    <item jid="somebody@example.com" subscription="both" name="Some Body">
      <group>A Group</group>
    </item>
  </query>
</iq> 

========
Send: Initial Presence, NOTE: You will receive presence updates from others
<presence from='<my jid>'
          xml:lang='en'>
  <show>chat</show>
  <status>Some Status</status>
</presence>

Response: Subscriptions to everyone's presence, could be useful for notifying people of messages while away?


======
Response: Incoming message

<message type="chat" id="purpleafd89799" to="target_user@example.com" from="source_user@example.com/C02C7991">
  <composing xmlns="http://jabber.org/protocol/chatstates"/>
  <nos:x value="disabled" xmlns:nos="google:nosave"/>
  <arc:record otr="false" xmlns:arc="http://jabber.org/protocol/archive"/>
</message>

<message type="chat" id="purpleafd8979a" to="target_user@example.com" from="source_user@example.com/C02C7991">
  <active xmlns="http://jabber.org/protocol/chatstates"/>
  <body>hey</body>
  <nos:x value="disabled" xmlns:nos="google:nosave"/>
  <arc:record otr="false" xmlns:arc="http://jabber.org/protocol/archive"/>
</message>

<message type="chat" id="purpleafd8979b" to="target_user@example.com" from="source_user@example.com/C02C7991">
  <active xmlns="http://jabber.org/protocol/chatstates"/>
  <nos:x value="disabled" xmlns:nos="google:nosave"/>
  <arc:record otr="false" xmlns:arc="http://jabber.org/protocol/archive"/>
</message>

==
<message type="chat" id="purpleafd8979f" to="target_user@example.com" from="source_user@example.com/C02C7991">
  <composing xmlns="http://jabber.org/protocol/chatstates"/>
  <nos:x value="disabled" xmlns:nos="google:nosave"/>
  <arc:record otr="false" xmlns:arc="http://jabber.org/protocol/archive"/>
</message>

<message type="chat" id="purpleafd897a0" to="target_user@example.com" from="source_user@example.com/C02C7991">
  <paused xmlns="http://jabber.org/protocol/chatstates"/>
  <nos:x value="disabled" xmlns:nos="google:nosave"/>
  <arc:record otr="false" xmlns:arc="http://jabber.org/protocol/archive"/></message>

<message type="chat" id="purpleafd897a1" to="target_user@example.com" from="source_user@example.com/C02C7991">
  <active xmlns="http://jabber.org/protocol/chatstates"/>
  <body>aoeuaoeu</body><nos:x value="disabled" xmlns:nos="google:nosave"/>
  <arc:record otr="false" xmlns:arc="http://jabber.org/protocol/archive"/>
</message>


